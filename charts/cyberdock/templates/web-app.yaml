---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cyberdock-web
  namespace: {{ .Release.Namespace }}
  labels:
    app: cyberdock-web
    {{- include "cyberdock.labels" . | nindent 4 }}
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yml
    kompose.version: 1.21.0 (HEAD)
  creationTimestamp: null
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: cyberdock-web
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: cyberdock-web
      annotations:
        kompose.cmd: kompose convert -f ../docker-compose.yml
        kompose.version: 1.21.0 (HEAD)
        {{if .Values.forceRestart }}
        helm.sh/deploy-date: {{ now | quote }}
        {{end}}
      creationTimestamp: null
    spec:
      volumes:
      - name: media-vol
        persistentVolumeClaim:
          claimName: web-pvc
          readOnly: false
      containers:
        - args:
            - python
            - runner.py
          env:
            - name: SECRET_KEY
              value: {{ .Values.cyberdock.SECRET_KEY }}
            - name: DATABASE_URL
              value: {{tpl .Values.cyberdock.DATABASE_URL .}}
            - name: REDIS_URL
              value: {{tpl .Values.cyberdock.REDIS_URL .}}
            - name: HOST
              value: {{.Values.cyberdock.HOST | quote }}
          image: {{ .Values.cyberdock.image }}:{{ .Values.cyberdock.backend.tag }}
          imagePullPolicy: Always
          name: cyberdock-web
          ports:
            - containerPort: 8000
              protocol: TCP
          volumeMounts:
            - mountPath: /run/media
              name: media-vol
              readOnly: false
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Values.namespace }}
  name: cyberdock-web-svc

  labels: {{- include "cyberdock.labels" . | nindent 4 }}
spec:
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
  selector:
    app: cyberdock-web
