apiVersion: apps/v1
kind: Deployment
metadata:
  name: cyberdock-worker
  namespace: {{ .Release.Namespace }}
  labels:
    app: cyberdock-worker
    {{- include "cyberdock.labels" . | nindent 4 }}
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yml
    kompose.version: 1.21.0 (HEAD)
  creationTimestamp: null
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: cyberdock-worker
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ../docker-compose.yml
        kompose.version: 1.21.0 (HEAD)
        {{if .Values.forceRestart }}
        helm.sh/deploy-date: {{ now | quote }}
        {{end}}
      creationTimestamp: null
      labels:
        app: cyberdock-worker
    spec:
      volumes:
      - name: media-vol
        persistentVolumeClaim:
          claimName: web-pvc
          readOnly: true
      - name: reports-vol
        persistentVolumeClaim:
          claimName: web-pvc
          readOnly: true

      containers:
        - command:
            - bash
            - runselery.sh
          env:
            - name: SECRET_KEY
              value: {{ .Values.cyberdock.SECRET_KEY }}
            - name: DATABASE_URL
              value: {{tpl  .Values.cyberdock.DATABASE_URL . }}
            - name: ELASTIC_URL
              value: {{tpl .Values.cyberdock.ELASTIC_URL .}}
            - name: REDIS_URL
              value: {{tpl .Values.cyberdock.REDIS_URL .}}
          image: {{ .Values.cyberdock.image }}:{{ .Values.cyberdock.backend.tag }}
          imagePullPolicy: Always
          name: worker
          resources: {}
          volumeMounts:
            - mountPath: /run/media
              name: media-vol
              readOnly: true
            - mountPath: /run/temp
              name: reports-vol
              readOnly: true
      restartPolicy: Always
      imagePullSecrets:
        - name: regcred
      serviceAccountName: ""
status: {}
